Last login: Thu Nov  3 08:41:01 on console
amso0055z-34:~ web$ ls


Adobe			Desktop			Library			Pictures
AndroidStudioProjects	Documents		Movies			Public
Applications		Downloads		Music			node_modules


amso0055z-34:~ web$ cd Desktop


amso0055z-34:Desktop web$ mkdir


usage: mkdir [-pv] [-m mode] directory ...


amso0055z-34:Desktop web$ mkdir NewGitRepo
amso0055z-34:Desktop web$ ls


NewGitRepo			mysql-connector-java-5.1.39


amso0055z-34:Desktop web$ cd NewGitRepo/


amso0055z-34:NewGitRepo web$ ls
amso0055z-34:NewGitRepo web$ touch README.md
amso0055z-34:NewGitRepo web$ ls


README.md


amso0055z-34:NewGitRepo web$ cat README.md 


# My H1 Header
MarkDown language
Some Text.

## My H2 Header


[My Link](http://google.com) amso0055z-34:NewGitRepo web$ git init


Initialized empty Git repository in /Users/web/Desktop/NewGitRepo/.git/


amso0055z-34:NewGitRepo web$ ls


README.md


amso0055z-34:NewGitRepo web$ ls -la


total 24
drwxr-xr-x   5 web  ITLABS\Domain Users   170  3 Nov 09:03 .
drwx------   6 web  ITLABS\Domain Users   204  3 Nov 08:58 ..
-rw-r--r--@  1 web  ITLABS\Domain Users  6148  3 Nov 09:00 .DS_Store
drwxr-xr-x  10 web  ITLABS\Domain Users   340  3 Nov 09:03 .git
-rw-r--r--   1 web  ITLABS\Domain Users    91  3 Nov 09:02 README.md
amso0055z-34:NewGitRepo web$ git status 
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	README.md

nothing added to commit but untracked files present (use "git add" to track)


amso0055z-34:NewGitRepo web$ git add README.md
amso0055z-34:NewGitRepo web$ git add .
amso0055z-34:NewGitRepo web$ git status


On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   README.md
    
    

amso0055z-34:NewGitRepo web$ git

usage: git [--version] [--help] [-C<path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.


amso0055z-34:NewGitRepo web$ git commit -m "Wu-Tang Clan Ain't Nuthin' Ta' Fuck Wit'"


[master (root-commit) eb9cdb4] Wu-Tang Clan Ain't Nuthin' Ta' Fuck Wit'
 Committer: web <web@amso0055z-34.local>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 7 insertions(+)
 create mode 100644 README.md
 
 
amso0055z-34:NewGitRepo web$ git status
On branch master
nothing to commit, working tree clean
amso0055z-34:NewGitRepo web$ 
